name: Release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Get tag version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Run tests
      run: go test ./...

    - name: Build binaries
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        LDFLAGS="-X main.version=${VERSION}"
        
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -ldflags="${LDFLAGS}" -o git-report-${VERSION}-linux-amd64 ./cmd/git-report
        GOOS=linux GOARCH=arm64 go build -ldflags="${LDFLAGS}" -o git-report-${VERSION}-linux-arm64 ./cmd/git-report
        GOOS=darwin GOARCH=amd64 go build -ldflags="${LDFLAGS}" -o git-report-${VERSION}-darwin-amd64 ./cmd/git-report
        GOOS=darwin GOARCH=arm64 go build -ldflags="${LDFLAGS}" -o git-report-${VERSION}-darwin-arm64 ./cmd/git-report
        GOOS=windows GOARCH=amd64 go build -ldflags="${LDFLAGS}" -o git-report-${VERSION}-windows-amd64.exe ./cmd/git-report

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          git-report-${{ steps.get_version.outputs.VERSION }}-linux-amd64
          git-report-${{ steps.get_version.outputs.VERSION }}-linux-arm64
          git-report-${{ steps.get_version.outputs.VERSION }}-darwin-amd64
          git-report-${{ steps.get_version.outputs.VERSION }}-darwin-arm64
          git-report-${{ steps.get_version.outputs.VERSION }}-windows-amd64.exe
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}